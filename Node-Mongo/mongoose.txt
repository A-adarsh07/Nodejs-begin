Now we are going to use mongoose rather than mongodb
Mongoose is an Object Data Modelling(ODM) library for MongoDB and Node.js 
Mongoose is like a translator between your Nodejs code and MongoDB . It makes working with the database smoother and easier

Mongoose as a driver is better than a native official driver -mongodb

Mongoose helps you make sure the data you put into the database is correct. Its like having someone check if you've written your email address correctly before sending a message.
very easy to query from the databases


install mongoose library using npm 
npm i mongoose

import Mongoose and define the MongoDB URL - in the db.js file ,first import the mongoose library and 
define the URL to your MongoDB database.

What are models or schema ??
Models are like a blueprint of our database 
Mongoose allows you to define a schema for your documents. A schema is like a blueprint that defines the structure andd data types of our documents within a collection.

ex. {
    "name" :"ALice",
    "age" : 23,
    "work" : "chef",
    "mobile" :"123-456-4342",
    "salary" :60000
}

    INSTALL BODY-parser
        npm i body-parser
***  WHat is body-parser ??
BodyParser is a middleware library for Express.js . It is used to parse and extract the body of incoming HTTP requests .
when a client sends data to a server , it typically includes that data in the body of an HTTP request.

*** BodyParser.json() automatically parses the json data from the request body and converts into a javascript object , which is then stored in the req.body
express js uses this as middleware 


***After that use 'Models' for different databases , create GET/POST method 
we have a lots of Endpoints in a single server.js file. 
but we shouldn't use this method of creating GET/POST in Server.js file , it'll be difficult later, so we'll use Express-Routing method for END-POINTS 

***Express Router is a way to modularizze and organize your route handling code in an Express js Application. 

***also we'll import Models in Router files 

***CRUD operation in routing Endpoints 
Update operation - PUT method  - 1) which record we want to update ?? 2) what exactly we want to update ??
find the unique identifiers in a document in collection.
first GET the data , then POST it 


Now we'll save our database online 
use MongoDb Atlas free version - create a collection - click connect - paste the url in db.js and connect it  but this is not a good practice 
so now we'll use "DOTENV"
npm install dotenv 
inside dotenv file - provide - Port ,DB_URL, 
also in server.js = require('dotenv').config();

now host your site in Render 
